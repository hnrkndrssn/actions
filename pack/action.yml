name: 'Pack'
description: 'Creates a package (.nupkg or .zip) from files on disk, without needing a .nuspec or .csproj.'
author: 'Octopus Deploy'

inputs:
  package_id:
    description: 'The ID of the package; e.g. MyCompany.MyApp'
    required: true
  format:
    description: 'Package format. Options are: NuPkg, Zip. Defaults to NuPkg, though we recommend Zip going forward'
    required: false
  version:
    description: 'The version of the package; must be a valid SemVer; defaults to a timestamp-based version'
    required: false
  out_folder:
    description: 'The folder into which the generated NuPkg file will be written; defaults to "."'
    required: false
  base_path:
    description: 'The root folder containing files and folders to pack; defaults to "."'
    required: false
  log_level:
    description: 'The log level. Valid options are verbose, debug, information, warning, error and fatal. Defaults to "debug".'
    required: false
  
  author:
    description: 'Add an author to the package metadata; defaults to the current user'
    required: false
  title:
    description: 'The title of the package'
    required: false
  description:
    description: 'A description of the package; defaults to a generic description'
    required: false
  release_notes:
    description: 'Release notes for this version of the package'
    required: false
  release_notes_file:
    description: 'A file containing release notes for this version of the package'
    required: false

  compression_level:
    description: 'Set compression level of package: none, fast, optimal (default).'
    required: false

  verbose:
    description: 'Verbose output'
    required: false
  include:
    description: 'Add a file pattern to include, relative to the base path e.g. /bin/- *.dll - if none are specified, defaults to **'
    required: false
  overwrite:
    description: 'Allow an existing package file of the same ID/version to be overwritten'
    required: false

runs:
  using: 'docker'
  image: 'docker://octopusdeploy/octo:latest'
  args:
    - 'pack'
    - '--id=${{ inputs.package_id }}'
    - ${{ inputs.format != '' && format('--format={0}', inputs.format) }}
    - ${{ inputs.version != '' && format('--version={0}', inputs.version) }}
    - ${{ inputs.out_folder != '' && format('--outFolder={0}', inputs.out_folder) }}
    - ${{ inputs.base_path != '' && format('--basePath={0}', inputs.base_path) }}
    - ${{ inputs.log_level != '' && format('--logLevel={0}', inputs.log_level) }}
    - ${{ inputs.author != '' && format('--author={0}', inputs.author) }}
    - ${{ inputs.title != '' && format('--title={0}', inputs.title) }}
    - ${{ inputs.description != '' && format('--description={0}', inputs.description) }}
    - ${{ inputs.release_notes != '' && format('--releaseNotes={0}', inputs.release_notes) }}
    - ${{ inputs.release_notes_file != '' && format('--releaseNotesFile={0}', inputs.release_notes_file) }}
    - ${{ inputs.compression_level != '' && format('--compressionLevel={0}', inputs.compression_level) }}
    - ${{ inputs.verbose && '--verbose' }}
    - ${{ inputs.include != '' && format('--include={0}', inputs.include) }}
    - ${{ inputs.overwrite && '--overwrite' }}

branding:
  icon: 'package'
  color: 'gray-dark'